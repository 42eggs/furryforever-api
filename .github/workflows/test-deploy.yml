name: Build, Test and Deploy Code

# on: [push, pull_request]

on:
    push:
        branches:
            - "main"
    pull_request:
        branches:
            - "main"

jobs:
    build:
        environment:
            name: testing
        env:
            DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
            DATABASE_PORT: ${{secrets.DATABASE_PORT}}
            DATABASE_NAME: ${{secrets.DATABASE_NAME}}
            DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
            DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
            SECRET_KEY: ${{secrets.SECRET_KEY}}
            ALGORITHM: ${{secrets.ALGORITHM}}
            ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
                    POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        runs-on: ubuntu-latest
        steps:
            - name: Pulling git repo
              uses: actions/checkout@v3
            - name: Install Python v3.10
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"
            - name: update pip
              run: python -m pip install --upgrade pip
            - name: Install all dependencies
              run: pip install -r requirements.txt
            - name: Run all tests with pytest
              run: |
                  pip install pytest
                  pytest -v -s

            # - name: Login to Docker Hub
            #   uses: docker/login-action@v2
            #   with:
            #       username: ${{ secrets.DOCKERHUB_USERNAME }}
            #       password: ${{ secrets.DOCKERHUB_TOKEN }}

            # - name: Set up Docker Buildx
            #   uses: docker/setup-buildx-action@v2

            # - name: Build and push
            #   uses: docker/build-push-action@v4
            #   with:
            #       context: .
            #       file: ./Dockerfile
            #       push: true
            #       tags: ${{ secrets.DOCKERHUB_USERNAME }}/furryforever-fastapi:latest
            #       cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/furryforever-fastapi:latest
            #       cache-to: type=inline
    deploy:
        runs-on: ubuntu-latest
        needs: [build]
        environment:
            name: production

        steps:
            - name: Pulling git repo
              uses: actions/checkout@v3
            - name: Deploying to Ubuntu Server
              uses: appleboy/ssh-action@v0.1.7
              with:
                  host: ${{ secrets.PROD_HOST }}
                  username: ${{ secrets.PROD_USERNAME }}
                  password: ${{ secrets.PROD_PASSWORD }}
                  port: ${{ secrets.PROD_PORT }}
                  script: |
                      cd app/src
                      git pull
                      source ../venv/bin/activate
                      pip install -r requirements.txt
                      echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart api
